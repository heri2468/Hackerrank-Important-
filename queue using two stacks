#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include<bits/stdc++.h>
using namespace std;

class MyQueue {
    private:
      stack <int> in;
      stack <int> out;
public:
    
    /** Push element x to the back of queue. */
    void push(int x) {
        in.push(x);
    }
    
    /** Removes the element from in front of queue and returns that element. */
    int pop() {
        int x = peek();
        out.pop();
        return x;
    }
    
    /** Get the front element. */
    int peek() {
        if(out.empty()) {
            while(in.size()) {
                out.push(in.top()); in.pop();
            }
        }
        return out.top();
    }
    
    /** Returns whether the queue is empty. */
    bool empty() {
        return in.empty() && out.empty();
    }
};

int main() {
    MyQueue q;
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  
    int n;
    cin>>n;
    
    while(n--)
    {
        int query=0;
        cin>>query;

        if(query==1){
            //1 x: Enqueue element  into the end of the queue.
            int x=0;
            cin>>x;
            q.push(x);
        }
        else if(query==2){
            //2: Dequeue the element at the front of the queue.
            int x = q.pop();
        }
        else if(query==3){
            //3: Print the element at the front of the queue.
            int x = q.peek();
            cout<<x<<endl;
        }
    } 
    return 0;
}
